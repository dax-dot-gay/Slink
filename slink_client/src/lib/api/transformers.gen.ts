// This file is auto-generated by @hey-api/openapi-ts

import type { GetIndexResponse, ListMinecraftVersionsResponse, GetLatestReleaseVersionResponse, GetLatestSnapshotVersionResponse, GetSpecificVersionResponse, GetVersionMetadataResponse } from './types.gen';

const sessionSchemaResponseTransformer = (data: any) => {
    data.created = new Date(data.created);
    data.last_connection = new Date(data.last_connection);
    return data;
};

const indexInfoSchemaResponseTransformer = (data: any) => {
    data.session = sessionSchemaResponseTransformer(data.session);
    return data;
};

export const getIndexResponseTransformer = async (data: any): Promise<GetIndexResponse> => {
    data = indexInfoSchemaResponseTransformer(data);
    return data;
};

const minecraftVersionSchemaResponseTransformer = (data: any) => {
    data.time = new Date(data.time);
    data.releaseTime = new Date(data.releaseTime);
    return data;
};

const minecraftVersionListSchemaResponseTransformer = (data: any) => {
    data.versions = data.versions.map((item: any) => {
        return minecraftVersionSchemaResponseTransformer(item);
    });
    return data;
};

export const listMinecraftVersionsResponseTransformer = async (data: any): Promise<ListMinecraftVersionsResponse> => {
    data = minecraftVersionListSchemaResponseTransformer(data);
    return data;
};

export const getLatestReleaseVersionResponseTransformer = async (data: any): Promise<GetLatestReleaseVersionResponse> => {
    data = minecraftVersionSchemaResponseTransformer(data);
    return data;
};

export const getLatestSnapshotVersionResponseTransformer = async (data: any): Promise<GetLatestSnapshotVersionResponse> => {
    data = minecraftVersionSchemaResponseTransformer(data);
    return data;
};

export const getSpecificVersionResponseTransformer = async (data: any): Promise<GetSpecificVersionResponse> => {
    data = minecraftVersionSchemaResponseTransformer(data);
    return data;
};

const minecraftVersionMetadataSchemaResponseTransformer = (data: any) => {
    data.version = minecraftVersionSchemaResponseTransformer(data.version);
    return data;
};

export const getVersionMetadataResponseTransformer = async (data: any): Promise<GetVersionMetadataResponse> => {
    data = minecraftVersionMetadataSchemaResponseTransformer(data);
    return data;
};