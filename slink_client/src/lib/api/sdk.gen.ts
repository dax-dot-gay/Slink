// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { GetIndexData, GetIndexResponse, LogoutData, LoginData, LoginResponse, ListMinecraftVersionsData, ListMinecraftVersionsResponse, GetLatestReleaseVersionData, GetLatestReleaseVersionResponse, GetLatestSnapshotVersionData, GetLatestSnapshotVersionResponse, GetSpecificVersionData, GetSpecificVersionResponse } from './types.gen';
import { getIndexResponseTransformer, listMinecraftVersionsResponseTransformer, getLatestReleaseVersionResponseTransformer, getLatestSnapshotVersionResponseTransformer, getSpecificVersionResponseTransformer } from './transformers.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class DefaultService {
    public static getIndex<ThrowOnError extends boolean = false>(options?: Options<GetIndexData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetIndexResponse, unknown, ThrowOnError>({
            responseTransformer: getIndexResponseTransformer,
            url: '/',
            ...options
        });
    }
    
}

export class AuthenticationService {
    public static logout<ThrowOnError extends boolean = false>(options?: Options<LogoutData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
            url: '/auth/login',
            ...options
        });
    }
    
    public static login<ThrowOnError extends boolean = false>(options: Options<LoginData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<LoginResponse, unknown, ThrowOnError>({
            url: '/auth/login',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class ProvidersService {
    public static listMinecraftVersions<ThrowOnError extends boolean = false>(options?: Options<ListMinecraftVersionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ListMinecraftVersionsResponse, unknown, ThrowOnError>({
            responseTransformer: listMinecraftVersionsResponseTransformer,
            url: '/providers/minecraft/versions',
            ...options
        });
    }
    
    public static getLatestReleaseVersion<ThrowOnError extends boolean = false>(options?: Options<GetLatestReleaseVersionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestReleaseVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getLatestReleaseVersionResponseTransformer,
            url: '/providers/minecraft/versions/latest_release',
            ...options
        });
    }
    
    public static getLatestSnapshotVersion<ThrowOnError extends boolean = false>(options?: Options<GetLatestSnapshotVersionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestSnapshotVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getLatestSnapshotVersionResponseTransformer,
            url: '/providers/minecraft/versions/latest_snapshot',
            ...options
        });
    }
    
    public static getSpecificVersion<ThrowOnError extends boolean = false>(options: Options<GetSpecificVersionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSpecificVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getSpecificVersionResponseTransformer,
            url: '/providers/minecraft/versions/{id}',
            ...options
        });
    }
    
}

export class MinecraftVersionProviderService {
    public static listMinecraftVersions<ThrowOnError extends boolean = false>(options?: Options<ListMinecraftVersionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ListMinecraftVersionsResponse, unknown, ThrowOnError>({
            responseTransformer: listMinecraftVersionsResponseTransformer,
            url: '/providers/minecraft/versions',
            ...options
        });
    }
    
    public static getLatestReleaseVersion<ThrowOnError extends boolean = false>(options?: Options<GetLatestReleaseVersionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestReleaseVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getLatestReleaseVersionResponseTransformer,
            url: '/providers/minecraft/versions/latest_release',
            ...options
        });
    }
    
    public static getLatestSnapshotVersion<ThrowOnError extends boolean = false>(options?: Options<GetLatestSnapshotVersionData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatestSnapshotVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getLatestSnapshotVersionResponseTransformer,
            url: '/providers/minecraft/versions/latest_snapshot',
            ...options
        });
    }
    
    public static getSpecificVersion<ThrowOnError extends boolean = false>(options: Options<GetSpecificVersionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSpecificVersionResponse, unknown, ThrowOnError>({
            responseTransformer: getSpecificVersionResponseTransformer,
            url: '/providers/minecraft/versions/{id}',
            ...options
        });
    }
    
}